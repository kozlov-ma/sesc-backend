// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthUsersColumns holds the columns for the "auth_users" table.
	AuthUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "auth_id", Type: field.TypeUUID, Unique: true},
		{Name: "user_id", Type: field.TypeUUID, Unique: true},
	}
	// AuthUsersTable holds the schema information for the "auth_users" table.
	AuthUsersTable = &schema.Table{
		Name:       "auth_users",
		Columns:    AuthUsersColumns,
		PrimaryKey: []*schema.Column{AuthUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "auth_users_users_auth",
				Columns:    []*schema.Column{AuthUsersColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "middle_name", Type: field.TypeString, Default: ""},
		{Name: "picture_url", Type: field.TypeString, Nullable: true},
		{Name: "suspended", Type: field.TypeBool, Default: false},
		{Name: "role_id", Type: field.TypeInt32},
		{Name: "subdivision", Type: field.TypeString},
		{Name: "job_title", Type: field.TypeString},
		{Name: "employment_rate", Type: field.TypeFloat64, Default: 1},
		{Name: "academic_degree", Type: field.TypeInt, Default: 0},
		{Name: "academic_title", Type: field.TypeString, Default: ""},
		{Name: "honors", Type: field.TypeString, Default: ""},
		{Name: "category", Type: field.TypeString, Default: ""},
		{Name: "date_of_employment", Type: field.TypeTime},
		{Name: "unemployment_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "department_id", Type: field.TypeUUID, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_departments_users",
				Columns:    []*schema.Column{UsersColumns[18]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.Restrict,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthUsersTable,
		DepartmentsTable,
		UsersTable,
	}
)

func init() {
	AuthUsersTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = DepartmentsTable
}
