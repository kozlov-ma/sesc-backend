definitions:
  api.APIError:
    properties:
      code:
        example: DEPARTMENT_NOT_FOUND
        type: string
      details:
        example: 'ID: abc123'
        type: string
      message:
        example: Department not found
        type: string
      ruMessage:
        example: Кафедра не найдена
        type: string
    type: object
  api.CreateDepartmentRequest:
    properties:
      description:
        example: Math department
        type: string
      name:
        example: Mathematics
        type: string
    type: object
  api.CreateDepartmentResponse:
    properties:
      description:
        example: Math department
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name:
        example: Mathematics
        type: string
    type: object
  api.CreateTeacherRequest:
    properties:
      departmentId:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      firstName:
        example: Ivan
        type: string
      lastName:
        example: Petrov
        type: string
      middleName:
        example: Sergeevich
        type: string
      pictureUrl:
        example: /images/users/ivan.jpg
        type: string
    type: object
  api.CreateUserRequest:
    properties:
      firstName:
        example: Anna
        type: string
      lastName:
        example: Smirnova
        type: string
      middleName:
        example: Olegovna
        type: string
      pictureUrl:
        example: /images/users/anna.jpg
        type: string
      roleId:
        example: 2
        type: integer
    type: object
  api.Department:
    properties:
      description:
        example: Math department
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name:
        example: Mathematics
        type: string
    type: object
  api.DepartmentsResponse:
    properties:
      departments:
        items:
          $ref: '#/definitions/api.Department'
        type: array
    type: object
  api.GrantPermissionsRequest:
    type: object
  api.Permission:
    properties:
      description:
        example: Создание и заполнение листа достижений
        type: string
      id:
        example: 1
        type: integer
      name:
        example: draft_achievement_list
        type: string
    type: object
  api.PermissionsResponse:
    properties:
      permissions:
        items:
          $ref: '#/definitions/api.Permission'
        type: array
    type: object
  api.RevokePermissionsRequest:
    type: object
  api.Role:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: Преподаватель
        type: string
      permissions:
        items:
          $ref: '#/definitions/api.Permission'
        type: array
    type: object
  api.RolesResponse:
    properties:
      roles:
        items:
          $ref: '#/definitions/api.Role'
        type: array
    type: object
  api.SetDepartmentRequest:
    properties:
      departmentId:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    type: object
  api.SetRoleRequest:
    properties:
      roleId:
        example: 3
        type: integer
    type: object
  api.UserResponse:
    properties:
      department:
        $ref: '#/definitions/api.Department'
      firstName:
        example: Ivan
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      lastName:
        example: Petrov
        type: string
      middleName:
        example: Sergeevich
        type: string
      pictureUrl:
        example: /images/users/ivan.jpg
        type: string
      role:
        $ref: '#/definitions/api.Role'
    type: object
info:
  contact: {}
paths:
  /departments:
    get:
      description: Retrieves list of all registered departments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.DepartmentsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: List all departments
      tags:
      - departments
    post:
      consumes:
      - application/json
      description: Creates a new department with provided name and description
      parameters:
      - description: Department creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateDepartmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.CreateDepartmentResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/api.APIError'
        "409":
          description: Department with this name already exists
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Create new department
      tags:
      - departments
  /permissions:
    get:
      description: Retrieves all available system permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.PermissionsResponse'
      summary: List all permissions
      tags:
      - permissions
  /roles:
    get:
      description: Retrieves all system roles with their permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RolesResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: List all roles
      tags:
      - roles
  /teachers:
    post:
      consumes:
      - application/json
      description: Creates a new teacher profile with department assignment
      parameters:
      - description: Teacher details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateTeacherRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/api.APIError'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/api.APIError'
        "409":
          description: Username already taken
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Create new teacher
      tags:
      - users
  /users:
    post:
      consumes:
      - application/json
      description: Creates a new user with specified role (non-teacher)
      parameters:
      - description: User details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid role or request format
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Create new user
      tags:
      - users
  /users/{id}:
    get:
      description: Retrieves detailed information about a user
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/api.APIError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Get user details
      tags:
      - users
  /users/{id}/department:
    put:
      consumes:
      - application/json
      description: Updates the user's department assignment
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      - description: Department ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.SetDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid department or UUID
          schema:
            $ref: '#/definitions/api.APIError'
        "404":
          description: User/department not found
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Update department
      tags:
      - users
  /users/{id}/permissions:
    delete:
      consumes:
      - application/json
      description: Removes extra permissions from a user
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      - description: Permission IDs to revoke
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RevokePermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid UUID or permission ID
          schema:
            $ref: '#/definitions/api.APIError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Revoke permissions
      tags:
      - permissions
    post:
      consumes:
      - application/json
      description: Adds extra permissions to a user's account
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      - description: List of permission IDs
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GrantPermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid UUID or permission ID
          schema:
            $ref: '#/definitions/api.APIError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Grant permissions to user
      tags:
      - permissions
  /users/{id}/role:
    put:
      consumes:
      - application/json
      description: Changes the user's system role
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      - description: New role ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.SetRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid role or UUID
          schema:
            $ref: '#/definitions/api.APIError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/api.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.APIError'
      summary: Update user role
      tags:
      - users
swagger: "2.0"
