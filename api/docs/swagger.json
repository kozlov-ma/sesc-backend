{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/departments": {
            "get": {
                "description": "Retrieves list of all registered departments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "List all departments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DepartmentsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new department with provided name and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Create new department",
                "parameters": [
                    {
                        "description": "Department creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.CreateDepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "409": {
                        "description": "Department with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/departments/{id}": {
            "put": {
                "description": "Updates the department's name and description by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Update department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UpdateDepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid department ID or request format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "409": {
                        "description": "Department with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes the department by ID",
                "tags": [
                    "departments"
                ],
                "summary": "Delete department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid department ID",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "409": {
                        "description": "Cannot remove department, it still has some users",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "description": "Retrieves all available system permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "List all permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PermissionsResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "Retrieves all system roles with their permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List all roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RolesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Creates a new user with specified role (non-teacher)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid role or request format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieves detailed information about a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Applies a partial update to the user identified by {id}. Only non-nil fields in the request are applied.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Partially update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User fields to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PatchUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or invalid field value",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.APIError": {
            "type": "object",
            "required": [
                "code",
                "message",
                "ruMessage"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "INVALID_REQUEST"
                },
                "details": {
                    "type": "string",
                    "example": "field X is required"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request body"
                },
                "ruMessage": {
                    "type": "string",
                    "example": "Некорректный формат запроса"
                }
            }
        },
        "api.CreateDepartmentRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.CreateDepartmentResponse": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.CreateUserRequest": {
            "type": "object",
            "required": [
                "firstName",
                "lastName",
                "roleId"
            ],
            "properties": {
                "firstName": {
                    "type": "string",
                    "example": "Anna"
                },
                "lastName": {
                    "type": "string",
                    "example": "Smirnova"
                },
                "middleName": {
                    "type": "string",
                    "example": "Olegovna"
                },
                "pictureUrl": {
                    "type": "string",
                    "example": "/images/users/anna.jpg"
                },
                "roleId": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "api.Department": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.DepartmentsResponse": {
            "type": "object",
            "required": [
                "departments"
            ],
            "properties": {
                "departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Department"
                    }
                }
            }
        },
        "api.PatchUserRequest": {
            "type": "object",
            "required": [
                "firstName",
                "lastName",
                "roleId",
                "suspended"
            ],
            "properties": {
                "departmentId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "firstName": {
                    "type": "string",
                    "example": "Ivan"
                },
                "lastName": {
                    "type": "string",
                    "example": "Petrov"
                },
                "middleName": {
                    "type": "string",
                    "example": "Sergeevich"
                },
                "pictureUrl": {
                    "type": "string",
                    "example": "/images/users/ivan.jpg"
                },
                "roleId": {
                    "type": "integer",
                    "example": 1
                },
                "suspended": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "api.Permission": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Создание и заполнение листа достижений"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "draft_achievement_list"
                }
            }
        },
        "api.PermissionsResponse": {
            "type": "object",
            "required": [
                "permissions"
            ],
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Permission"
                    }
                }
            }
        },
        "api.Role": {
            "type": "object",
            "required": [
                "id",
                "name",
                "permissions"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Преподаватель"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Permission"
                    }
                }
            }
        },
        "api.RolesResponse": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Role"
                    }
                }
            }
        },
        "api.UpdateDepartmentRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.UpdateDepartmentResponse": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "required": [
                "firstName",
                "id",
                "lastName",
                "pictureUrl",
                "role",
                "suspended"
            ],
            "properties": {
                "department": {
                    "$ref": "#/definitions/api.Department"
                },
                "firstName": {
                    "type": "string",
                    "example": "Ivan"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "lastName": {
                    "type": "string",
                    "example": "Petrov"
                },
                "middleName": {
                    "type": "string",
                    "example": "Sergeevich"
                },
                "pictureUrl": {
                    "type": "string",
                    "example": "/images/users/ivan.jpg"
                },
                "role": {
                    "$ref": "#/definitions/api.Role"
                },
                "suspended": {
                    "type": "boolean"
                }
            }
        }
    }
}