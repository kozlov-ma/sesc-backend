// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/departments": {
            "get": {
                "description": "Retrieves a list of all departments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "List all departments",
                "responses": {
                    "200": {
                        "description": "Response containing created departments or error details",
                        "schema": {
                            "$ref": "#/definitions/api.DepartmentsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to process request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new department with the provided name and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Create a new department",
                "parameters": [
                    {
                        "description": "Department information",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response containing created department or error details",
                        "schema": {
                            "$ref": "#/definitions/api.CreateDepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict - Department with this name already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to process request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/permissions": {
            "get": {
                "description": "Permissions cannot be changed other than from the code. This lists all the permissions a user may have.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "List all permissions",
                "responses": {
                    "200": {
                        "description": "Response containing all possible permissions",
                        "schema": {
                            "$ref": "#/definitions/api.PermissionsResponse"
                        }
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "description": "Retrieves a list of all roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List all roles",
                "responses": {
                    "200": {
                        "description": "Response containing registered roles or error details",
                        "schema": {
                            "$ref": "#/definitions/api.RolesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to process request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CreateDepartmentError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ru_message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "api.CreateDepartmentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.CreateDepartmentResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "error": {
                    "$ref": "#/definitions/api.CreateDepartmentError"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Department": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.DepartmentsError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ru_message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "api.DepartmentsResponse": {
            "type": "object",
            "properties": {
                "departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Department"
                    }
                },
                "error": {
                    "$ref": "#/definitions/api.DepartmentsError"
                }
            }
        },
        "api.Permission": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.PermissionsResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Permission"
                    }
                }
            }
        },
        "api.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Permission"
                    }
                }
            }
        },
        "api.RolesError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "ru_message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "api.RolesResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/api.RolesError"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Role"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
