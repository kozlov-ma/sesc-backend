// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/departments": {
            "get": {
                "description": "Retrieves list of all registered departments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "List all departments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DepartmentsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new department with provided name and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Create new department",
                "parameters": [
                    {
                        "description": "Department creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.CreateDepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "409": {
                        "description": "Department with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "description": "Retrieves all available system permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "List all permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PermissionsResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "Retrieves all system roles with their permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List all roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RolesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/teachers": {
            "post": {
                "description": "Creates a new teacher profile with department assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new teacher",
                "parameters": [
                    {
                        "description": "Teacher details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateTeacherRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "409": {
                        "description": "Username already taken",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Creates a new user with specified role (non-teacher)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid role or request format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieves detailed information about a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}/department": {
            "put": {
                "description": "Updates the user's department assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SetDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid department or UUID",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "User/department not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}/permissions": {
            "post": {
                "description": "Adds extra permissions to a user's account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Grant permissions to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of permission IDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GrantPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID or permission ID",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes extra permissions from a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Revoke permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission IDs to revoke",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RevokePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID or permission ID",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}/role": {
            "put": {
                "description": "Changes the user's system role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New role ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SetRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid role or UUID",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "DEPARTMENT_NOT_FOUND"
                },
                "details": {
                    "type": "string",
                    "example": "ID: abc123"
                },
                "message": {
                    "type": "string",
                    "example": "Department not found"
                },
                "ruMessage": {
                    "type": "string",
                    "example": "Кафедра не найдена"
                }
            }
        },
        "api.CreateDepartmentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.CreateDepartmentResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.CreateTeacherRequest": {
            "type": "object",
            "properties": {
                "departmentId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "firstName": {
                    "type": "string",
                    "example": "Ivan"
                },
                "lastName": {
                    "type": "string",
                    "example": "Petrov"
                },
                "middleName": {
                    "type": "string",
                    "example": "Sergeevich"
                },
                "pictureUrl": {
                    "type": "string",
                    "example": "/images/users/ivan.jpg"
                }
            }
        },
        "api.CreateUserRequest": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string",
                    "example": "Anna"
                },
                "lastName": {
                    "type": "string",
                    "example": "Smirnova"
                },
                "middleName": {
                    "type": "string",
                    "example": "Olegovna"
                },
                "pictureUrl": {
                    "type": "string",
                    "example": "/images/users/anna.jpg"
                },
                "roleId": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "api.Department": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Math department"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Mathematics"
                }
            }
        },
        "api.DepartmentsResponse": {
            "type": "object",
            "properties": {
                "departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Department"
                    }
                }
            }
        },
        "api.GrantPermissionsRequest": {
            "type": "object"
        },
        "api.Permission": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Создание и заполнение листа достижений"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "draft_achievement_list"
                }
            }
        },
        "api.PermissionsResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Permission"
                    }
                }
            }
        },
        "api.RevokePermissionsRequest": {
            "type": "object"
        },
        "api.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Преподаватель"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Permission"
                    }
                }
            }
        },
        "api.RolesResponse": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Role"
                    }
                }
            }
        },
        "api.SetDepartmentRequest": {
            "type": "object",
            "properties": {
                "departmentId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "api.SetRoleRequest": {
            "type": "object",
            "properties": {
                "roleId": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "department": {
                    "$ref": "#/definitions/api.Department"
                },
                "firstName": {
                    "type": "string",
                    "example": "Ivan"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "lastName": {
                    "type": "string",
                    "example": "Petrov"
                },
                "middleName": {
                    "type": "string",
                    "example": "Sergeevich"
                },
                "pictureUrl": {
                    "type": "string",
                    "example": "/images/users/ivan.jpg"
                },
                "role": {
                    "$ref": "#/definitions/api.Role"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
